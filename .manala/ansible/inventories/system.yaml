system:
    hosts:

        ###############
        # Development #
        ###############

        development:
            # Ansible
            ansible_connection: local
            ansible_python_interpreter: /usr/bin/python3
            # Accounts
            manala_accounts_enabled: true
            # Motd
            manala_motd_enabled: true
            # Timezone
            manala_timezone_enabled: true
            # Locales
            manala_locales_enabled: true
            # Zsh
            manala_zsh_enabled: true
            # Environment
            manala_environment_enabled: true
            # Apt
            manala_apt_enabled: true
            manala_apt_packages:
              - rsync
              - wget
              - curl
              - make
              - less
              - ssl-cert
              - htop
              - pv # for real-time progress on streams (e.g mysql import)
            # Ssh
            manala_ssh_enabled: true
            manala_ssh_client_config_template: config/client/default.dev.j2
            # Git
            manala_git_enabled: true
            # Oh my zsh
            manala_ohmyzsh_enabled: true
            # Vim
            manala_vim_enabled: true
            # Alternatives
            manala_alternatives_enabled: true
            # Files
            manala_files_enabled: true
            # NodeJS
            manala_nodejs_enabled: true
            # Npm
            manala_npm_enabled: false
            # Php
            manala_php_enabled: false
            # Nginx
            manala_nginx_enabled: true
            # Supervisor
            manala_supervisor_enabled: true
            # Ngrok
            manala_ngrok_enabled: true
            # Java
            manala_java_enabled: false
            # Cron
            manala_cron_enabled: false
            # MySQL / MariaDB
            manala_mysql_enabled: false
            # Redis
            manala_redis_enabled: false
            # Elasticsearch
            manala_elasticsearch_enabled: false
            # InfluxDB
            manala_influxdb_enabled: false
            # MongoDB
            manala_mongodb_enabled: false
            # Docker
            manala_docker_enabled: true
            # Gomplate
            manala_gomplate_enabled: true

        ###############
        # Integration #
        ###############

        integration:
            # Ansible
            ansible_connection: local
            ansible_python_interpreter: /usr/bin/python3
            # Apt
            manala_apt_enabled: true
            manala_apt_packages:
              - rsync
              - wget
              - curl
              - make
              - less
              - ssl-cert
              - procps
              - vim-tiny
            # Ssh
            manala_ssh_enabled: true
            manala_ssh_server: false
            manala_ssh_client_config_template: config/client/default.test.j2
            # Git
            manala_git_enabled: true
            # NodeJS
            manala_nodejs_enabled: true
            # Npm
            manala_npm_enabled: false
            # Php
            manala_php_enabled: false
            manala_php_sapis:
              - cli

    vars:

        #######
        # All #
        #######

        # Accounts
        manala_accounts_groups:
          - group: docker
            system: true
        manala_accounts_users:
          - user: vagrant
            group: vagrant
            groups: ['docker']

        # Motd
        manala_motd_scripts_exclusive: true
        manala_motd_scripts:
          - file: 10-motd
            template: motd/elao.j2
            message:
                - A curl vaillant, rien d'impossible !
                - --force et owner !
                - Il n'y pas de question cron, juste des réponses mal timé ! — Cronfucius

        # Timezone
        manala_timezone_default: Etc/UTC

        # Locales
        manala_locales_codes_default: C.UTF-8

        # Environment
        manala_environment_files:
          - zsh

        # Apt
        manala_apt_configs:
          - file: archive
            template: configs/check_valid_until_false.j2
            state: "{{ (ansible_distribution_release in ['jessie']) | ternary('present', 'absent') }}"
        manala_apt_repositories_exclusive: true
        manala_apt_preferences_exclusive: true
        manala_apt_preferences:
          - ansible@ansible
          - preference: python-backports.ssl-match-hostname@manala
            state: "{{ (ansible_distribution_release in ['jessie']) | ternary('present', 'absent') }}"
          - preference: python-docker@manala
            state: "{{ (ansible_distribution_release in ['jessie']) | ternary('present', 'absent') }}"
          - preference: python-httplib2@manala
            state: "{{ (ansible_distribution_release in ['jessie']) | ternary('present', 'absent') }}"
          - preference: python-ipaddress@manala
            state: "{{ (ansible_distribution_release in ['jessie']) | ternary('present', 'absent') }}"
          - preference: python-jinja2@manala
            state: "{{ (ansible_distribution_release in ['jessie']) | ternary('present', 'absent') }}"
          - preference: python-websocket@manala
            state: "{{ (ansible_distribution_release in ['jessie']) | ternary('present', 'absent') }}"
          - preference: htop@backports
            state: "{{ (ansible_distribution_release in ['jessie']) | ternary('present', 'absent') }}"
          - preference: docker@docker
            state: "{{ (manala_docker_enabled) | ternary('present', 'absent') }}"
          - preference: git@backports
            state: "{{ (manala_git_enabled and (ansible_distribution_release in ['jessie', 'stretch'])) | ternary('present', 'absent') }}"
          - preference: supervisor@{{ (ansible_distribution_release in ['jessie']) | ternary('manala', 'backports') }}
            state: "{{ (manala_supervisor_enabled and (ansible_distribution_release in ['jessie', 'stretch'])) | ternary('present', 'absent') }}"
          - preference: php@sury_php
            state: "{{ (manala_php_enabled) | ternary('present', 'absent') }}"
          - preference: nginx@nginx
            state: "{{ (manala_nginx_enabled) | ternary('present', 'absent') }}"
          - preference: nodejs@nodesource_12
            state: "{{ (manala_nodejs_enabled) | ternary('present', 'absent') }}"
          - preference: yarn@yarn
            state: "{{ (manala_yarn_enabled) | ternary('present', 'absent') }}"
          - preference: mysql@default
            state: absent
          - preference: mariadb@default
            state: absent
          - preference: redis@{{ (ansible_distribution_release in ['stretch']) | ternary('backports', 'default') }}
            state: "{{ (manala_redis_enabled and (ansible_distribution_release in ['stretch'])) | ternary('present', 'absent') }}"
          - preference: elasticsearch@default
            state: "{{ (manala_elasticsearch_enabled) | ternary('present', 'absent') }}"
          - preference: influxdb@default
            state: "{{ (manala_influxdb_enabled) | ternary('present', 'absent') }}"
          - preference: mongodb@default
            state: "{{ (manala_mongodb_enabled) | ternary('present', 'absent') }}"

        # Ssh
        manala_ssh_server_config_template: config/server/default.dev.j2
        manala_ssh_server_config:
          - AcceptEnv: WORKDIR
        manala_ssh_client_config:
          # App
          - Host tom32i.fr:
              - User: tom32i
              - ForwardAgent: true
          - Host deployer.vm:
              - User: tom32i
              - ForwardAgent: true
        manala_ssh_known_hosts:
          - github.com
          - git.elao.com

        # Git
        manala_git_config_template: config/default.dev.j2

        # Oh my zsh
        manala_ohmyzsh_users:
          - user: vagrant
            group: vagrant
            template: users/php.dev.j2
            config:
              - "[ -d ${WORKDIR:-/srv/app} ] && cd ${WORKDIR:-/srv/app}"

        # Vim
        manala_vim_config_template: config/default.dev.j2

        # Alternatives
        manala_alternatives_selections:
          - selection: editor
            path: /usr/bin/vim.basic

        # Files
        manala_files_attributes_defaults:
          - parents: true
            force: true
          - path: "^/srv/log"
            user: vagrant
            group: vagrant
          - path: "^/srv/cache"
            user: vagrant
            group: vagrant
        manala_files_attributes:
          - path: /srv/log
            state: directory
          - path: /srv/cache
            state: directory
          - path: /usr/share/nginx/html/404.html
            template: nginx/html/404.html.j2
            mode: "0644"

        # Yarn
        manala_yarn_enabled: "{{ manala_nodejs_enabled }}"

        # Php
        manala_php_version: <no value>
        manala_php_sapis_exclusive: true
        manala_php_fpm_pools_exclusive: true
        manala_php_fpm_pools:
          - file: app.conf
            template: fpm_pools/app.dev.j2
            config:
              - app:
                  - user: vagrant
                  - group: vagrant
                  - php_admin_value[error_log]: /srv/log/php.error.log
        manala_php_extensions_exclusive: true
        manala_php_extensions:
          - opcache
          - readline
          - json
          - extension: xdebug
            enabled: false
        manala_php_configs_exclusive: true
        manala_php_configs:
          - file: 50-xdebug.ini
            template: configs/xdebug.dev.j2

        # Composer
        manala_composer_enabled: "{{ manala_php_enabled }}"

        # Symfony Cli
        manala_symfony_cli_enabled: "{{ manala_php_enabled }}"

        # Nginx
        manala_nginx_config_template: config/http.dev.j2
        manala_nginx_configs_exclusive: true
        manala_nginx_configs:
          - file: default.conf
            config:
              - server:
                - listen: '* default_server'
                - error_page: '404 /404.html'
                - location /404.html:
                  - root: /usr/share/nginx/html
                  - internal;
          # App
          - file: app_gzip
            template: configs/app_gzip.dev.j2
          - file: app_ssl.conf
            template: nginx/app_ssl_offloading.conf.j2
          - config:
              - proxy_http_version: "1.1"
              - proxy_set_header: Upgrade $http_upgrade
              - proxy_set_header: Connection "upgrade"
              - proxy_set_header: Host $host
              - proxy_set_header: X-Real-IP $remote_addr
              - proxy_set_header: X-Forwarded-For $proxy_add_x_forwarded_for
            file: app_ws_proxy
          - config:
              - add_header: Access-Control-Allow-Origin * always
              - add_header: Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always
              - add_header: Access-Control-Allow-Headers "Authorization, Content-Type, Accept-Encoding, Cache-Control" always
              - add_header: Access-Control-Allow-Credentials "true" always
              - if ($request_method = OPTIONS):
                  - return: 204
            file: app_access_control
          - config:
              - server:
                  - server_name: server.synchroplayer.vm
                  - access_log: /srv/log/server.access.log
                  - error_log: /srv/log/server.error.log
                  - root: /srv/app/build
                  - include: conf.d/app_gzip
                  - include: conf.d/app_access_control
                  - charset: UTF-8
                  - location /:
                      - proxy_pass: http://localhost:8001/
                      - include: conf.d/app_ws_proxy
                      - proxy_connect_timeout: 60s
                      - proxy_send_timeout: 60s
                      - proxy_read_timeout: 60s
            file: server.conf
          - config:
              - server:
                  - server_name: synchroplayer.vm
                  - access_log: /srv/log/client.access.log
                  - error_log: /srv/log/client.error.log
                  - root: /srv/app/build
                  - include: conf.d/app_gzip
                  - include: conf.d/app_access_control
                  - charset: UTF-8
                  - location /:
                      - try_files: $uri $uri/ /index.html
            file: client.conf

        # Supervisor
        manala_supervisor_config_template: config/debian/supervisord.conf.j2
        manala_supervisor_configs_exclusive: true
        manala_supervisor_configs_defaults:
          template: supervisor/app.conf.j2
        manala_supervisor_configs:
          - template: configs/inet_http_server.conf.j2
            config:
              port: "*:9001"
          # App
          - file: server.conf
            programs:
              synchroplayer:
                  autostart: true
                  command: node bin/server.js 8001
                  directory: /srv/app
                  stdout_logfile: /srv/log/supervisor.synchroplayer.log

        # Ngrok
        manala_ngrok_configs_exclusive: true
        manala_ngrok_configs:
          - file: config.yml
            template: configs/default.dev.j2

        # Java
        manala_java_version: "{{
          {
            'jessie': '8',
            'stretch': '8',
            'buster': '11',
          }[ansible_distribution_release]
        }}"

        # Cron
        manala_cron_files_defaults:
          user: vagrant

        # MySQL / MariaDB
        manala_mysql_configs:
          - file: zz-mysqld.cnf
            template: configs/default.dev.j2
        manala_mysql_users:
          # Create a password-less/any-host root user...
          - name: root
            password: ~
            host: "%"
            priv: "*.*:ALL,GRANT"
          # ...then remove anonymous localhost user (MySQL 5.6)
          - name: ''
            host: localhost
            state: absent
          # ...then remove root localhost user (socket based authentication on MySQL 5.7+/MariaDB)
          - name: root
            host: localhost
            state: absent

        # Redis
        manala_redis_config_template: config/default.dev.j2

        # Elasticsearch

        # Docker
        manala_docker_containers:
          - name: mailhog
            image: mailhog/mailhog:v1.0.1
            state: started
            restart_policy: unless-stopped
            ports:
              - 25:1025
              - 8025:8025
          - name: phpmyadmin
            image: phpmyadmin/phpmyadmin
            state: absent
            restart_policy: unless-stopped
            env:
              PMA_USER: root
              # Default docker host ip
              PMA_HOST: 172.17.0.1
              UPLOAD_LIMIT: 64M
            ports:
              - 1979:80
          - name: phpredisadmin
            image: erikdubbelboer/phpredisadmin
            state: absent
            restart_policy: unless-stopped
            env:
              # Default docker host ip
              REDIS_1_HOST: 172.17.0.1
            ports:
              - 1981:80
          - name: mongo-express
            image: mongo-express
            state: absent
            restart_policy: unless-stopped
            env:
              # Default docker host ip
              ME_CONFIG_MONGODB_SERVER: 172.17.0.1
            ports:
              - 1982:8081
